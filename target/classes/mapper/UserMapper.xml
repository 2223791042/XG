<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mr.s.dao.UserMapper">
  <resultMap id="BaseResultMap" type="mr.s.entity.User">
    <id column="UserId" jdbcType="BIGINT" property="userId" />
    <result column="UserName" jdbcType="VARCHAR" property="userName" />
    <result column="UserType" jdbcType="VARCHAR" property="userType" />
    <result column="Password" jdbcType="VARCHAR" property="password" />
    <result column="PasswordSalt" jdbcType="VARCHAR" property="passwordSalt" />
  </resultMap>
  <resultMap id="RoleMap" type="mr.s.entity.Role">
    <id column="RoleId" jdbcType="BIGINT" property="roleId" />
    <result column="RoleName" jdbcType="VARCHAR" property="roleName" />
    <result column="RoleDesc" jdbcType="VARCHAR" property="roleDesc" />
  </resultMap>
  <resultMap id="PermissionMap" type="mr.s.entity.Permission">
    <id column="PermissionId" jdbcType="BIGINT" property="permissionId" />
    <result column="PermissionName" jdbcType="VARCHAR" property="permissionName" />
    <result column="PermissionDesc" jdbcType="VARCHAR" property="permissionDesc" />
    <result column="PermissionCode" jdbcType="VARCHAR" property="permissionCode" />
    <result column="PermissionType" jdbcType="VARCHAR" property="permissionType" />
  </resultMap>
  <resultMap id="MenuMap" type="mr.s.entity.Menu">
    <id column="MenuId" jdbcType="BIGINT" property="menuId" />
    <result column="MenuName" jdbcType="VARCHAR" property="menuName" />
    <result column="MenuLevel" jdbcType="INTEGER" property="menuLevel" />
    <result column="ParentId" jdbcType="INTEGER" property="parentId" />
    <result column="MenuLink" jdbcType="VARCHAR" property="menuLink" />
    <result column="MenuType" jdbcType="VARCHAR" property="menuType" />
    <result column="PermissionId" jdbcType="BIGINT" property="permissionId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    UserId, UserName, UserType, Password, PasswordSalt
  </sql>
  <select id="selectMaxId" resultType="java.lang.Long">
    select max(UserId) from user
  </select>
  <select id="selectRoleListByUserId" parameterType="java.lang.Long" resultMap="RoleMap">
    select role.* from user_role,role where user_role.UserId = #{userId,jdbcType=BIGINT} and user_role.RoleId = role.RoleId
  </select>
  <select id="selectPermissionListByUserId" parameterType="java.lang.Long" resultMap="PermissionMap">
    select distinct permission.* from user_role,role,role_permission,permission where user_role.UserId = = #{userId,jdbcType=BIGINT} and user_role.RoleId = role.RoleId and role_permission.RoleId = role.RoleId and role_permission.PermissionId = permission.PermissionId
  </select>
  <select id="selectPermissionCodeListByUserId" parameterType="java.lang.Long" resultType="java.lang.String">
     select distinct permission.PermissionCode from user_role,role,role_permission,permission where user_role.UserId = #{userId,jdbcType=BIGINT} and user_role.RoleId = role.RoleId and role_permission.RoleId = role.RoleId and role_permission.PermissionId = permission.PermissionId
  </select>
  <select id="selectByExample" parameterType="mr.s.entity.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where UserId = #{userId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user
    where UserId = #{userId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="mr.s.entity.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="mr.s.entity.User">
    insert into user (UserId, UserName, UserType,
      Password, PasswordSalt)
    values (#{userId,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}, #{userType,jdbcType=VARCHAR},
      #{password,jdbcType=VARCHAR}, #{passwordSalt,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective"  parameterType="mr.s.entity.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        UserId,
      </if>
      <if test="userName != null">
        UserName,
      </if>
      <if test="userType != null">
        UserType,
      </if>
      <if test="password != null">
        Password,
      </if>
      <if test="passwordSalt != null">
        PasswordSalt,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        #{userType,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="passwordSalt != null">
        #{passwordSalt,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="mr.s.entity.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.userId != null">
        UserId = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.userName != null">
        UserName = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.userType != null">
        UserType = #{record.userType,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        Password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.passwordSalt != null">
        PasswordSalt = #{record.passwordSalt,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set UserId = #{record.userId,jdbcType=BIGINT},
    UserName = #{record.userName,jdbcType=VARCHAR},
    UserType = #{record.userType,jdbcType=VARCHAR},
    Password = #{record.password,jdbcType=VARCHAR},
    PasswordSalt = #{record.passwordSalt,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="mr.s.entity.User">
    update user
    <set>
      <if test="userName != null">
        UserName = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        UserType = #{userType,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        Password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="passwordSalt != null">
        PasswordSalt = #{passwordSalt,jdbcType=VARCHAR},
      </if>
    </set>
    where UserId = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="mr.s.entity.User">
    update user
    set UserName = #{userName,jdbcType=VARCHAR},
      UserType = #{userType,jdbcType=VARCHAR},
      Password = #{password,jdbcType=VARCHAR},
      PasswordSalt = #{passwordSalt,jdbcType=VARCHAR}
    where UserId = #{userId,jdbcType=BIGINT}
  </update>
</mapper>